<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
              "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
              
<mapper namespace="kr.co.gotthem.mybatis.BasketMapper">

	<select id="FindByNo" resultType="kr.co.gotthem.basket.bean.BasketBean">
		select * from basket where bas_no = #{bas_no}
	</select>	
	<insert id="insert" parameterType="kr.co.gotthem.basket.bean.BasketBean">
		insert into basket
		values(basket_seq.nextval,#{bas_menno},#{bas_procode},#{bas_proname},#{bas_stono},
		#{bas_prostock},#{bas_proprice},#{bas_procategory},#{bas_proexdate})
	</insert>
	<update id="update" parameterType="kr.co.gotthem.basket.bean.BasketBean">
		update basket set bas_prostock=#{bas_prostock} where bas_no = #{bas_no}
	</update>

    <!-- 1. 장바구니 추가 -->
    <insert id="insertBasket">
        INSERT INTO basket (
           bas_memno, bas_procode, bas_proname, bas_prostock, bas_stono,bas_proprice
      )VALUES(
       #{bas_memno}, #{bas_procode}, #{bas_proname},#{bas_prostock}, #{bas_stono}, #{bas_proprice})
    </insert> 
   <!-- 1.1. 상품 삭제 -->
    <delete id="deleteproduct">
        DELETE FROM product
        WHERE pro_no = #{bas_no}
    </delete>

    <!-- 2. 장바구니 목록 -->
    <select id="listBasket" resultType="kr.co.gotthem.basket.bean.BasketBean">
         SELECT
            b.bas_no AS bas_no, 
            b.bas_memno AS bas_memno,
            b.bas_procode,
            b.bas_proname,
            b.bas_stono,          
            b.bas_procategory,
            b.bas_proexdate,
            p.pro_code As pro_code,
            b.bas_proprice,
            m.mem_no AS mem_no, 
            p.pro_name AS pro_name, 
            b.bas_prostock,        
            p.pro_price,
            (pro_price * bas_prostock) money
        FROM
            member m, product p, basket b
        WHERE m.mem_no = b.bas_memno
            AND p.pro_code = b.bas_procode
            AND b.bas_memno = #{bas_memno}
        ORDER BY
            b.bas_no
    </select>
    
    <!-- 3. 장바구니 전체 금액 -->
    <select id="sumMoney" resultType="int">
        SELECT IFNULL(SUM(pro_price * bas_prostock), 0)
        FROM basket b,product p
        WHERE b.bas_procode = p.pro_code AND b.bas_memno = #{mem_no}
    </select>
     
    <!-- 4. 장바구니 수정(수량만 수정). -->
    <update id="modifyBasket">
        UPDATE basket   
        SET bas_prostock = #{bas_prostock} 
        WHERE bas_memno= #{bas_memno} AND bas_procode = #{bas_procode}
    </update>  
 
    <!-- 5. 장바구니 삭제 -->
    <delete id="deleteBasket">
        DELETE FROM basket
        WHERE bas_no = #{bas_no}
    </delete>

	<!-- 6. 장바구니에 동일한 상품 레코드 확인 -->
    <select id="countBasket" resultType="int">
        select count(*) from basket
        WHERE bas_memno= #{bas_memno} AND bas_procode = #{bas_procode}
    </select>
    
    <!-- 7. 장바구니에 동일한 상품이 존재하면 수정(insert시,동일한 상품 존재시 기존 수량에 새로운 수량 더하기 -->
    <update id="updateBasket">
        UPDATE basket 
        SET bas_prostock = bas_prostock + #{bas_prostock} 
        WHERE bas_memno= #{bas_memno} AND bas_procode = #{bas_procode}
    </update>



<!-- 결제 관련 부분 -->
  <!-- 1. 단건 결제 추가 -->
    <insert id="insertOrder" >
       INSERT INTO orderpay (
          ord_procode, ord_proname, ord_memno,ord_stock, ord_price)VALUES(
         #{ord_procode}, #{ord_proname},#{ord_memno}, #{ord_stock}, #{ord_price})
    </insert> 
   <!-- 1.1. 결제 되면, 결제된 수량만큼 장바구니 수량 -(insert시,동일한 상품 존재시 기존 수량에 새로운 수량 더하기 -->
    <update id="updateBasketOrder">
        UPDATE basket 
        SET bas_prostock = bas_prostock - #{ord_stock} 
        WHERE bas_memno= #{ord_memno} AND bas_procode = #{ord_procode}
    </update> 
<!--      1.2. 결제  취소 삭제
    <delete id="deleteBasketOrder">
        DELETE FROM basket
        WHERE bas_no = #{bas_no}
    </delete> -->
    
   <!-- 2. 결제  취소 삭제 -->
    <delete id="deleteOrder">
        DELETE FROM product
        WHERE pro_no = #{bas_no}
    </delete>


    <!-- 2. 장바구니 목록 -->
    <select id="listOrder" resultType="kr.co.gotthem.order.bean.OrderpayBean">
         SELECT
            b.bas_no AS bas_no, 
            b.bas_memno AS bas_memno,
            b.bas_procode,
            b.bas_proname,
            b.bas_stono,          
            b.bas_procategory,
            b.bas_proexdate,
            p.pro_code As pro_code,
            b.bas_proprice,
            m.mem_no AS mem_no, 
            p.pro_name AS pro_name, 
            b.bas_prostock,        
            p.pro_price,
            (pro_price * bas_prostock) money
        FROM
            member m, product p, basket b
        WHERE m.mem_no = b.bas_memno
            AND p.pro_code = b.bas_procode
            AND b.bas_memno = #{bas_memno}
        ORDER BY
            b.bas_no
    </select>

    <!-- 7. 장바구니에 동일한 상품이 존재하면 수정(insert시,동일한 상품 존재시 기존 수량에 새로운 수량 더하기 -->
    <update id="updateOrder">
        UPDATE basket 
        SET bas_prostock = bas_prostock + #{bas_prostock} 
        WHERE bas_memno= #{bas_memno} AND bas_procode = #{bas_procode}
    </update>
</mapper>
